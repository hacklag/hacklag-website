$grid-namespace:        $namespace-objects !default;

$grid-gutter:           $base-spacing !default;
$grid-gutter--tiny:       quarter($grid-gutter) !default;
$grid-gutter--small:        halve($grid-gutter) !default;
$grid-gutter--large:       double($grid-gutter) !default;
$grid-gutter--huge:     quadruple($grid-gutter) !default;

$enable-grid--tiny:     false !default;
$enable-grid--small:    false !default;
$enable-grid--large:    false !default;
$enable-grid--huge:     false !default;
$enable-grid--flush:    false !default;
$enable-grid--rev:      false !default;
$enable-grid--middle:   false !default;
$enable-grid--bottom:   false !default;
$enable-grid--right:    false !default;
$enable-grid--center:   false !default;
$enable-grid--auto:     false !default;

/**
 * Begin a grid group.
 */
.#{$grid-namespace}grid,
%#{$grid-namespace}grid {
    list-style: none;
    margin:  0;
    padding: 0;
    margin-left: -$grid-gutter;
}

    /**
     * 1. Cause columns to stack side-by-side.
     * 2. Space columns apart.
     * 3. Align columns to the tops of each other.
     * 4. Full-width unless told to behave otherwise.
     * 5. Required to combine fluid widths and fixed gutters.
     */
    .#{$grid-namespace}grid__item,
    %#{$grid-namespace}grid__item {
        display: inline-block; /* [1] */
        padding-left: $grid-gutter; /* [2] */
        vertical-align: top; /* [3] */
        width: 100%; /* [4] */
    }





@if ($enable-grid--tiny == true) {

    /**
     * Layouts with tiny gutters.
     */

    .#{$grid-namespace}grid--tiny,
    %#{$grid-namespace}grid--tiny {
        margin-left: -($grid-gutter--tiny);

        > .#{$grid-namespace}grid__item,
        > %#{$grid-namespace}grid__item {
            padding-left: $grid-gutter--tiny;
        }

    }

}

@if ($enable-grid--small == true) {

    /**
     * Layouts with small gutters.
     */

    .#{$grid-namespace}grid--small,
    %#{$grid-namespace}grid--small {
        margin-left: -($grid-gutter--small);

        > .#{$grid-namespace}grid__item,
        > %#{$grid-namespace}grid__item {
            padding-left: $grid-gutter--small;
        }

    }

}

@if ($enable-grid--large == true) {

    /**
     * Layouts with large gutters.
     */

    .#{$grid-namespace}grid--large,
    %#{$grid-namespace}grid--large {
        margin-left: -($grid-gutter--large);

        > .#{$grid-namespace}grid__item,
        > %#{$grid-namespace}grid__item {
            padding-left: $grid-gutter--large;
        }

    }

}

@if ($enable-grid--huge == true) {

    /**
     * Layouts with huge gutters.
     */

    .#{$grid-namespace}grid--huge,
    %#{$grid-namespace}grid--huge {
        margin-left: -($grid-gutter--huge);

        > .#{$grid-namespace}grid__item,
        > %#{$grid-namespace}grid__item {
            padding-left: $grid-gutter--huge;
        }

    }

}





@if ($enable-grid--flush == true) {

    /**
     * Layouts with no gutters.
     */

    .#{$grid-namespace}grid--flush,
    %#{$grid-namespace}grid--flush {
        margin-left: 0;

        > .#{$grid-namespace}grid__item,
        > %#{$grid-namespace}grid__item {
            padding-left: 0;
        }

    }

}





@if ($enable-grid--rev == true) {

    /**
     * Reversed rendered order of grid items, e.g. items 1, 2, 3, 4 in your
     * markup will display in order 4, 3, 2, 1 on your page.
     */

    .#{$grid-namespace}grid--rev,
    %#{$grid-namespace}grid--rev {
        direction: rtl;
        text-align: left;

        > .#{$grid-namespace}grid__item,
        > %#{$grid-namespace}grid__item {
            direction: ltr;
            text-align: left;
        }

    }

}





@if ($enable-grid--middle == true) {

    /**
     * Align grid items to the vertical centers of each other.
     */

    .#{$grid-namespace}grid--middle,
    %#{$grid-namespace}grid--middle {

        > .#{$grid-namespace}grid__item,
        > %#{$grid-namespace}grid__item {
            vertical-align: middle;
        }

    }

}

@if ($enable-grid--bottom == true) {

    /**
     * Align grid items to the vertical bottoms of each other.
     */

    .#{$grid-namespace}grid--bottom,
    %#{$grid-namespace}grid--bottom {

        > .#{$grid-namespace}grid__item,
        > %#{$grid-namespace}grid__item {
            vertical-align: bottom;
        }

    }

}





@if ($enable-grid--right == true) {

    /**
     * Make the grid items fill up from the right hand side.
     */

    .#{$grid-namespace}grid--right,
    %#{$grid-namespace}grid--right {
        text-align: right;

        > .#{$grid-namespace}grid__item,
        > %#{$grid-namespace}grid__item {
            text-align: left;
        }

    }

}

@if ($enable-grid--center == true) {

    /**
     * Make the grid items fill up from the center outward.
     */

    .#{$grid-namespace}grid--center,
    %#{$grid-namespace}grid--center {
        text-align: center;

        > .#{$grid-namespace}grid__item,
        > %#{$grid-namespace}grid__item {
            text-align: left;
        }

    }

}





@if ($enable-grid--auto == true) {

    /**
     * Cause grid items to take up a non-explicit amount of width.
     */
    .#{$grid-namespace}grid--auto,
    %#{$grid-namespace}grid--auto {

        > .#{$grid-namespace}grid__item,
        > %#{$grid-namespace}grid__item {
            width: auto;
        }

    }

}
